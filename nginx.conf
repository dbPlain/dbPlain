worker_processes 4;

events { worker_connections 1024; }

http {
    #load balancing
    upstream node-app-balancing { 
        ip_hash;
        server node1:3000 weight=4 max_fails=3 fail_timeout=30s;
        server node2:3000 weight=4 max_fails=3 fail_timeout=30s;
        
        
    }
    

    #makes sure 'Content-Type' in GET request for /static is correct, and not "text/plain"
    include /etc/nginx/mime.types;

    server {

        root /www/data;

        listen 80;

        # Handle static content from /www/data/static
        location ^~ /static {
          try_files $uri $uri/ =404;
        }

        # Handle dynamic content
        location / {
          proxy_pass http://node-app-balancing;
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";
           #proxy_set_header Host $host;
           proxy_set_header Host $host;
        }
        
    }

    server {

        root /www/data;

        listen 443 ssl;
        listen [::]:443 ssl;

        ssl_certificate      /etc/nginx/certs/nginx.crt;
        ssl_certificate_key  /etc/nginx/certs/nginx.key;

        # HTTPS server optimization
        ssl_session_timeout  7m;
        ssl_session_cache    shared:SSL:50m;

        # diffie-hellman parameter for dhe ciphersuites, recommended 2048 bits
        ssl_dhparam /etc/nginx/certs/dhparam.pem;

        # ciphersuite configuration
        ssl_protocols  TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
        ssl_ciphers    HIGH:!aNULL:!MD5; # "openssl ciphers"
        ssl_prefer_server_ciphers  on;

        # https://www.nginx.com/blog/http-strict-transport-security-hsts-and-nginx
        # HSTS (ngx_http_headers_module is required) (31536000 seconds = 1 year)
        add_header Strict-Transport-Security: "max-age=31536000; includeSubDomains";

        server_name localhost;

        # Handle static content from /www/data/static
        location ^~ /static {
          try_files $uri $uri/ =404;
        }

        # Handle dynamic content
        location / {
          proxy_pass http://node-app-balancing;
          proxy_set_header  X-Real-IP  $remote_addr;
          proxy_set_header    Host     $http_host;
        }

        # https://github.com/ChimeraCoder/nginx-ssl-docker
        # https://nginx.org/en/docs/http/ngx_http_ssl_module.html
    }
}
